name: Reusable Build Workflow

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        description: "Version string for the build"
      short_hash:
        required: false
        type: string
        description: "Short git hash for the build"

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-linux-gnu
            runs-on: ubuntu-latest
            os: linux
            arch: aarch64
            ext: ""
          - target: x86_64-linux-gnu
            runs-on: ubuntu-latest
            os: linux
            arch: x86_64
            ext: ""
          - target: x86_64-windows
            runs-on: ubuntu-latest
            os: windows
            arch: x86_64
            ext: ".exe"
          - target: aarch64-macos
            runs-on: macos-15
            os: macos
            arch: aarch64
            ext: ""
            release: small
          - target: x86_64-macos
            runs-on: macos-13
            os: macos
            arch: x86_64
            ext: ""
            release: small

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          install: true
          experimental: true
          cache: true

      - name: Cache .zig-cache
        uses: actions/cache@v4
        with:
          path: .zig-cache
          key: zig-cache-${{ matrix.os }}-${{ matrix.arch }}-${{ hashFiles('build.zig', 'build.zig.zon') }}
          restore-keys: |
            zig-cache-${{ matrix.os }}-${{ matrix.arch }}-
            zig-cache-

      - name: Build for ${{ matrix.os }} ${{ matrix.arch }}
        run: mise run build --target=${{ matrix.target }}${{ matrix.release && format(' --release={0}', matrix.release) || '' }}

      - name: Create output folder
        run: |
          mkdir -p dist

      - name: Copy files to output folder
        run: |
          cp zig-out/bin/* dist/
          rm dist/roller.pdb
          cp -r midi dist/
          cp images/roller.ico dist/
          cp README.md dist/
          cp LICENSE.md dist/

      - name: Package Windows/macOS build
        if: matrix.os == 'macos' || matrix.os == 'windows'
        run: |
          cd dist && zip -r ../roller-${{ matrix.os }}-${{ matrix.arch }}.zip *

      - name: Package Linux build
        if: matrix.os == 'linux'
        run: |
          cd dist && tar -czf ../roller-${{ matrix.os }}-${{ matrix.arch }}.tar.gz *

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: roller-${{ matrix.os }}-${{ matrix.arch }}
          path: roller-${{ matrix.os }}-${{ matrix.arch }}.*
          retention-days: 7
